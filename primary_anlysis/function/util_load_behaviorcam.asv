function behavior_cam = util_load_behaviordata(folderpath)
%UTIL_LOAD_BEHAVIORDATA Summary of this function goes here
    % load eye.avi, and whisker.avi
    % at the point of 2025.08.17 MScan behavior cam fps has a bug - it does
    % not match with imaging speed 
%   Detailed explanation goes here
    disp ('load behavior data start')
    eye_path = fullfile(folderpath,'eye.avi');
    whisker_path = fullfile(folderpath,'whisker.avi');
    

    % Initialize outputs
    behavior_cam.eye     = NaN;

    if isfile(eye_path)
    else
        disp('eye.avi does not exist')
    end
    
    if isfile(whisker_path)
    else
        disp('whisker.avi does not exist')
    end
    behavior_cam.eye = read_avi(eye_path);
    behavior_cam.whisker = read_avi(whisker_path);
    
    disp ('load behavior data end')

end


function frames = read_avi(fpath)
% Helper: read an AVI file if it exists. Returns frames (uint8) and fps (double).
    [~,tag,~] = fileparts(fpath);
    i_textprogress(0, 'Reading frames');
    if ~isfile(fpath)
        fprintf('%s.avi does not exist\n', tag);
        return;
    end

    try
        vr  = VideoReader(fpath);

        % Read the first frame to determine color vs grayscale and size
        if ~hasFrame(vr)
            warning('%s.avi does not contain frames.', tag);
            return;
        end
        firstFrame = readFrame(vr);  % uint8 HxWx(1 or 3)

        % Collect frames in a cell (robust when NumFrames is unreliable)
        buf = {firstFrame};
        while hasFrame(vr)
            buf{end+1} = readFrame(vr); %#ok<AGROW>
        end

        % Concatenate into array
        nframes = numel(buf);
        [H,W] = size(buf{1});         % H x W x N
        frames = zeros(H,W,nframes,'uint8');
        for k = 1:nF
            frames(:,:,k) = buf{k};
        end
        fprintf('Loaded %s.avi: %d frame(s)', tag, size(frames, nframes));

    catch ME
        warning('Failed to read %s.avi: %s', tag, ME.message);
        frames = [];
    end
end
